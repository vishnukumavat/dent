// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dent/elections/v1beta1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgAdminNewVoterRegistration defines an SDK message for creating a request for registering new voter.
type MsgAdminNewVoterRegistrationRequest struct {
	// admin_address specifies the address of the transaction initiator
	AdminAddress string `protobuf:"bytes,1,opt,name=admin_address,json=adminAddress,proto3" json:"admin_address,omitempty"`
	// voter_wallet_address specifies the wallet address of the new voter
	VoterWalletAddress string `protobuf:"bytes,2,opt,name=voter_wallet_address,json=voterWalletAddress,proto3" json:"voter_wallet_address,omitempty"`
	// otp specifies the otp to validate the request made by voter
	Otp uint64 `protobuf:"varint,3,opt,name=otp,proto3" json:"otp,omitempty"`
}

func (m *MsgAdminNewVoterRegistrationRequest) Reset()         { *m = MsgAdminNewVoterRegistrationRequest{} }
func (m *MsgAdminNewVoterRegistrationRequest) String() string { return proto.CompactTextString(m) }
func (*MsgAdminNewVoterRegistrationRequest) ProtoMessage()    {}
func (*MsgAdminNewVoterRegistrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4080c98bc2fe22ee, []int{0}
}
func (m *MsgAdminNewVoterRegistrationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAdminNewVoterRegistrationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAdminNewVoterRegistrationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAdminNewVoterRegistrationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAdminNewVoterRegistrationRequest.Merge(m, src)
}
func (m *MsgAdminNewVoterRegistrationRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgAdminNewVoterRegistrationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAdminNewVoterRegistrationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAdminNewVoterRegistrationRequest proto.InternalMessageInfo

func (m *MsgAdminNewVoterRegistrationRequest) GetAdminAddress() string {
	if m != nil {
		return m.AdminAddress
	}
	return ""
}

func (m *MsgAdminNewVoterRegistrationRequest) GetVoterWalletAddress() string {
	if m != nil {
		return m.VoterWalletAddress
	}
	return ""
}

func (m *MsgAdminNewVoterRegistrationRequest) GetOtp() uint64 {
	if m != nil {
		return m.Otp
	}
	return 0
}

type MsgAdminNewVoterRegistrationResponse struct {
}

func (m *MsgAdminNewVoterRegistrationResponse) Reset()         { *m = MsgAdminNewVoterRegistrationResponse{} }
func (m *MsgAdminNewVoterRegistrationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAdminNewVoterRegistrationResponse) ProtoMessage()    {}
func (*MsgAdminNewVoterRegistrationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4080c98bc2fe22ee, []int{1}
}
func (m *MsgAdminNewVoterRegistrationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAdminNewVoterRegistrationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAdminNewVoterRegistrationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAdminNewVoterRegistrationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAdminNewVoterRegistrationResponse.Merge(m, src)
}
func (m *MsgAdminNewVoterRegistrationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAdminNewVoterRegistrationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAdminNewVoterRegistrationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAdminNewVoterRegistrationResponse proto.InternalMessageInfo

// MsgAdminNewVoterRegistration defines an SDK message for creating a request for registering new voter.
type MsgCreateCandidateRequest struct {
	// name specifies the name of the candidate for election
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// party specifies the party of the candidate
	Party string `protobuf:"bytes,2,opt,name=party,proto3" json:"party,omitempty"`
	// admin_address specifies the address of the transaction initiator
	AdminAddress string `protobuf:"bytes,3,opt,name=admin_address,json=adminAddress,proto3" json:"admin_address,omitempty"`
}

func (m *MsgCreateCandidateRequest) Reset()         { *m = MsgCreateCandidateRequest{} }
func (m *MsgCreateCandidateRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCandidateRequest) ProtoMessage()    {}
func (*MsgCreateCandidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4080c98bc2fe22ee, []int{2}
}
func (m *MsgCreateCandidateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCandidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCandidateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCandidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCandidateRequest.Merge(m, src)
}
func (m *MsgCreateCandidateRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCandidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCandidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCandidateRequest proto.InternalMessageInfo

func (m *MsgCreateCandidateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateCandidateRequest) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *MsgCreateCandidateRequest) GetAdminAddress() string {
	if m != nil {
		return m.AdminAddress
	}
	return ""
}

type MsgCreateCandidateResponse struct {
}

func (m *MsgCreateCandidateResponse) Reset()         { *m = MsgCreateCandidateResponse{} }
func (m *MsgCreateCandidateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCandidateResponse) ProtoMessage()    {}
func (*MsgCreateCandidateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4080c98bc2fe22ee, []int{3}
}
func (m *MsgCreateCandidateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCandidateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCandidateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCandidateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCandidateResponse.Merge(m, src)
}
func (m *MsgCreateCandidateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCandidateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCandidateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCandidateResponse proto.InternalMessageInfo

// MsgNewVoterRegisterationRequest defines an SDK message for registering new voter.
type MsgNewVoterRegisterationRequest struct {
	// voter_wallet_address specifies the wallet address of the new voter
	VoterWalletAddress string `protobuf:"bytes,1,opt,name=voter_wallet_address,json=voterWalletAddress,proto3" json:"voter_wallet_address,omitempty"`
	// otp specifies the otp to validate the request made by voter
	Otp uint64 `protobuf:"varint,2,opt,name=otp,proto3" json:"otp,omitempty"`
}

func (m *MsgNewVoterRegisterationRequest) Reset()         { *m = MsgNewVoterRegisterationRequest{} }
func (m *MsgNewVoterRegisterationRequest) String() string { return proto.CompactTextString(m) }
func (*MsgNewVoterRegisterationRequest) ProtoMessage()    {}
func (*MsgNewVoterRegisterationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4080c98bc2fe22ee, []int{4}
}
func (m *MsgNewVoterRegisterationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewVoterRegisterationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewVoterRegisterationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewVoterRegisterationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewVoterRegisterationRequest.Merge(m, src)
}
func (m *MsgNewVoterRegisterationRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewVoterRegisterationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewVoterRegisterationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewVoterRegisterationRequest proto.InternalMessageInfo

func (m *MsgNewVoterRegisterationRequest) GetVoterWalletAddress() string {
	if m != nil {
		return m.VoterWalletAddress
	}
	return ""
}

func (m *MsgNewVoterRegisterationRequest) GetOtp() uint64 {
	if m != nil {
		return m.Otp
	}
	return 0
}

type MsgNewVoterRegisterationResponse struct {
}

func (m *MsgNewVoterRegisterationResponse) Reset()         { *m = MsgNewVoterRegisterationResponse{} }
func (m *MsgNewVoterRegisterationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgNewVoterRegisterationResponse) ProtoMessage()    {}
func (*MsgNewVoterRegisterationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4080c98bc2fe22ee, []int{5}
}
func (m *MsgNewVoterRegisterationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewVoterRegisterationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewVoterRegisterationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewVoterRegisterationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewVoterRegisterationResponse.Merge(m, src)
}
func (m *MsgNewVoterRegisterationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewVoterRegisterationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewVoterRegisterationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewVoterRegisterationResponse proto.InternalMessageInfo

type MsgCreatePollRequest struct {
	PollName     string        `protobuf:"bytes,1,opt,name=poll_name,json=pollName,proto3" json:"poll_name,omitempty"`
	CandidateIds []uint64      `protobuf:"varint,2,rep,packed,name=candidate_ids,json=candidateIds,proto3" json:"candidate_ids,omitempty"`
	StartAt      time.Time     `protobuf:"bytes,3,opt,name=start_at,json=startAt,proto3,stdtime" json:"start_at"`
	PollDuration time.Duration `protobuf:"bytes,4,opt,name=poll_duration,json=pollDuration,proto3,stdduration" json:"poll_duration,omitempty" yaml:"poll_duration"`
	AdminAddress string        `protobuf:"bytes,5,opt,name=admin_address,json=adminAddress,proto3" json:"admin_address,omitempty"`
}

func (m *MsgCreatePollRequest) Reset()         { *m = MsgCreatePollRequest{} }
func (m *MsgCreatePollRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePollRequest) ProtoMessage()    {}
func (*MsgCreatePollRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4080c98bc2fe22ee, []int{6}
}
func (m *MsgCreatePollRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePollRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePollRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePollRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePollRequest.Merge(m, src)
}
func (m *MsgCreatePollRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePollRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePollRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePollRequest proto.InternalMessageInfo

func (m *MsgCreatePollRequest) GetPollName() string {
	if m != nil {
		return m.PollName
	}
	return ""
}

func (m *MsgCreatePollRequest) GetCandidateIds() []uint64 {
	if m != nil {
		return m.CandidateIds
	}
	return nil
}

func (m *MsgCreatePollRequest) GetStartAt() time.Time {
	if m != nil {
		return m.StartAt
	}
	return time.Time{}
}

func (m *MsgCreatePollRequest) GetPollDuration() time.Duration {
	if m != nil {
		return m.PollDuration
	}
	return 0
}

func (m *MsgCreatePollRequest) GetAdminAddress() string {
	if m != nil {
		return m.AdminAddress
	}
	return ""
}

type MsgCreatPollResponse struct {
}

func (m *MsgCreatPollResponse) Reset()         { *m = MsgCreatPollResponse{} }
func (m *MsgCreatPollResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatPollResponse) ProtoMessage()    {}
func (*MsgCreatPollResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4080c98bc2fe22ee, []int{7}
}
func (m *MsgCreatPollResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatPollResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatPollResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatPollResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatPollResponse.Merge(m, src)
}
func (m *MsgCreatPollResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatPollResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatPollResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatPollResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgAdminNewVoterRegistrationRequest)(nil), "dent.elections.v1beta1.MsgAdminNewVoterRegistrationRequest")
	proto.RegisterType((*MsgAdminNewVoterRegistrationResponse)(nil), "dent.elections.v1beta1.MsgAdminNewVoterRegistrationResponse")
	proto.RegisterType((*MsgCreateCandidateRequest)(nil), "dent.elections.v1beta1.MsgCreateCandidateRequest")
	proto.RegisterType((*MsgCreateCandidateResponse)(nil), "dent.elections.v1beta1.MsgCreateCandidateResponse")
	proto.RegisterType((*MsgNewVoterRegisterationRequest)(nil), "dent.elections.v1beta1.MsgNewVoterRegisterationRequest")
	proto.RegisterType((*MsgNewVoterRegisterationResponse)(nil), "dent.elections.v1beta1.MsgNewVoterRegisterationResponse")
	proto.RegisterType((*MsgCreatePollRequest)(nil), "dent.elections.v1beta1.MsgCreatePollRequest")
	proto.RegisterType((*MsgCreatPollResponse)(nil), "dent.elections.v1beta1.MsgCreatPollResponse")
}

func init() { proto.RegisterFile("dent/elections/v1beta1/tx.proto", fileDescriptor_4080c98bc2fe22ee) }

var fileDescriptor_4080c98bc2fe22ee = []byte{
	// 616 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xb1, 0x6f, 0xd3, 0x4e,
	0x14, 0xce, 0x35, 0xe9, 0xef, 0x97, 0x1e, 0x89, 0x40, 0x27, 0xab, 0x4d, 0x0d, 0xb2, 0x23, 0x07,
	0xa1, 0x0c, 0x95, 0xdd, 0x84, 0x01, 0x44, 0x91, 0x50, 0x52, 0x16, 0x86, 0x54, 0xc8, 0x42, 0x20,
	0xb1, 0x44, 0x97, 0xfa, 0xb0, 0x8c, 0x6c, 0x9f, 0xf1, 0x5d, 0xda, 0x46, 0x88, 0x99, 0x0d, 0x75,
	0xe8, 0xc0, 0xff, 0xc2, 0x3f, 0xd0, 0xb1, 0x23, 0x53, 0x40, 0xc9, 0xc6, 0xc8, 0x5f, 0x80, 0xee,
	0x6c, 0xa7, 0x49, 0x93, 0x26, 0x94, 0xed, 0xfc, 0xee, 0x7b, 0xef, 0xbe, 0xf7, 0xbd, 0xef, 0x19,
	0xea, 0x0e, 0x09, 0xb9, 0x45, 0x7c, 0x72, 0xc8, 0x3d, 0x1a, 0x32, 0xeb, 0xa8, 0xd1, 0x23, 0x1c,
	0x37, 0x2c, 0x7e, 0x62, 0x46, 0x31, 0xe5, 0x14, 0x6d, 0x0a, 0x80, 0x39, 0x01, 0x98, 0x29, 0x40,
	0x55, 0x5c, 0xea, 0x52, 0x09, 0xb1, 0xc4, 0x29, 0x41, 0xab, 0xba, 0x4b, 0xa9, 0xeb, 0x13, 0x4b,
	0x7e, 0xf5, 0xfa, 0xef, 0x2c, 0xee, 0x05, 0x84, 0x71, 0x1c, 0x44, 0x29, 0x40, 0xbb, 0x0a, 0x70,
	0xfa, 0x31, 0x16, 0x95, 0x93, 0x7b, 0xe3, 0x0b, 0x80, 0xb5, 0x0e, 0x73, 0x5b, 0x4e, 0xe0, 0x85,
	0x07, 0xe4, 0xf8, 0x35, 0xe5, 0x24, 0xb6, 0x89, 0xeb, 0x31, 0x9e, 0xc0, 0x6c, 0xf2, 0xa1, 0x4f,
	0x18, 0x47, 0x35, 0x58, 0xc6, 0x02, 0xd3, 0xc5, 0x8e, 0x13, 0x13, 0xc6, 0x2a, 0xa0, 0x0a, 0xea,
	0x1b, 0x76, 0x49, 0x06, 0x5b, 0x49, 0x0c, 0xed, 0x42, 0xe5, 0x48, 0x14, 0xe8, 0x1e, 0x63, 0xdf,
	0x27, 0x7c, 0x82, 0x5d, 0x93, 0x58, 0x24, 0xef, 0xde, 0xc8, 0xab, 0x2c, 0xe3, 0x0e, 0xcc, 0x53,
	0x1e, 0x55, 0xf2, 0x55, 0x50, 0x2f, 0xd8, 0xe2, 0x68, 0x3c, 0x80, 0xf7, 0x97, 0xf3, 0x61, 0x11,
	0x0d, 0x19, 0x31, 0xde, 0xc3, 0xed, 0x0e, 0x73, 0xf7, 0x63, 0x82, 0x39, 0xd9, 0xc7, 0xa1, 0xe3,
	0x39, 0x98, 0x93, 0x8c, 0x2d, 0x82, 0x85, 0x10, 0x07, 0x24, 0x25, 0x29, 0xcf, 0x48, 0x81, 0xeb,
	0x11, 0x8e, 0xf9, 0x20, 0x65, 0x93, 0x7c, 0xcc, 0xf7, 0x95, 0x9f, 0xef, 0xcb, 0xb8, 0x07, 0xd5,
	0x45, 0x6f, 0xa5, 0x4c, 0x08, 0xd4, 0x3b, 0xcc, 0x9d, 0x25, 0x4b, 0x66, 0xd5, 0xbb, 0x4e, 0x18,
	0xb0, 0x4a, 0x98, 0xb5, 0x4b, 0x61, 0x0c, 0x58, 0xbd, 0xfe, 0x99, 0x94, 0xca, 0xb7, 0x35, 0xa8,
	0x4c, 0x98, 0xbe, 0xa4, 0xbe, 0x9f, 0x11, 0xb8, 0x0b, 0x37, 0x22, 0xea, 0xfb, 0xdd, 0x29, 0x55,
	0x8a, 0x22, 0x70, 0x20, 0x94, 0xa9, 0xc1, 0xf2, 0x61, 0xd6, 0x55, 0xd7, 0x73, 0xc4, 0xbc, 0xf2,
	0xf5, 0x82, 0x5d, 0x9a, 0x04, 0x5f, 0x38, 0x0c, 0x3d, 0x83, 0x45, 0xc6, 0x71, 0xcc, 0xbb, 0x98,
	0x4b, 0x8d, 0x6e, 0x35, 0x55, 0x33, 0xf1, 0x96, 0x99, 0x79, 0xcb, 0x7c, 0x95, 0x99, 0xaf, 0x5d,
	0x3c, 0x1f, 0xea, 0xb9, 0xd3, 0x1f, 0x3a, 0xb0, 0xff, 0x97, 0x59, 0x2d, 0x8e, 0x3e, 0xc2, 0xb2,
	0xa4, 0x90, 0x19, 0xb0, 0x52, 0x90, 0x55, 0xb6, 0xe7, 0xaa, 0x3c, 0x4f, 0x01, 0xed, 0x3d, 0x51,
	0xe4, 0xd7, 0x50, 0xdf, 0x9a, 0xc9, 0xdb, 0xa1, 0x81, 0xc7, 0x49, 0x10, 0xf1, 0xc1, 0xef, 0xa1,
	0xae, 0x0c, 0x70, 0xe0, 0x3f, 0x31, 0x66, 0x00, 0xc6, 0x57, 0xf1, 0x6e, 0x49, 0xc4, 0xb2, 0x52,
	0xf3, 0x63, 0x5e, 0x5f, 0x30, 0xe6, 0xcd, 0x4b, 0xf1, 0x12, 0xed, 0x12, 0x55, 0x9b, 0x67, 0x05,
	0x98, 0xef, 0x30, 0x17, 0x9d, 0x01, 0xb8, 0x25, 0x8d, 0x39, 0x3f, 0x01, 0xb4, 0x67, 0x2e, 0xde,
	0x5b, 0xf3, 0x2f, 0x96, 0x4b, 0x7d, 0xfa, 0x6f, 0xc9, 0x09, 0x3d, 0xf4, 0x09, 0x2a, 0x12, 0x74,
	0xc5, 0x9f, 0xa8, 0xb1, 0xa4, 0xea, 0xe2, 0xbd, 0x51, 0x9b, 0x37, 0x49, 0x49, 0x9f, 0xff, 0x0c,
	0x20, 0x5a, 0x20, 0xc8, 0xa3, 0x25, 0xa5, 0x96, 0xed, 0x8a, 0xfa, 0xf8, 0xe6, 0x89, 0x29, 0x93,
	0x00, 0xde, 0x9e, 0x12, 0x42, 0x8c, 0x10, 0xed, 0xac, 0x6c, 0x68, 0x6a, 0x4b, 0xd4, 0x95, 0xe8,
	0x69, 0x5b, 0xb4, 0x77, 0xcf, 0x47, 0x1a, 0xb8, 0x18, 0x69, 0xe0, 0xe7, 0x48, 0x03, 0xa7, 0x63,
	0x2d, 0x77, 0x31, 0xd6, 0x72, 0xdf, 0xc7, 0x5a, 0xee, 0xad, 0xfc, 0x87, 0x5b, 0x27, 0x53, 0xbf,
	0x79, 0x3e, 0x88, 0x08, 0xeb, 0xfd, 0x27, 0x3d, 0xfe, 0xf0, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x02, 0xc4, 0xc7, 0xa9, 0x05, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// AdminVoterRegisteration defines a method for creating new voter registeration request (only accessible via ADMIN)
	AdminVoterRegisteration(ctx context.Context, in *MsgAdminNewVoterRegistrationRequest, opts ...grpc.CallOption) (*MsgAdminNewVoterRegistrationResponse, error)
	// AdminCreateCandidate defines a method for creating new candidate for election (only accessible via ADMIN)
	AdminCreateCandidate(ctx context.Context, in *MsgCreateCandidateRequest, opts ...grpc.CallOption) (*MsgCreateCandidateResponse, error)
	// VoterRegisteration defines a method for creating new registering voter
	VoterRegisteration(ctx context.Context, in *MsgNewVoterRegisterationRequest, opts ...grpc.CallOption) (*MsgNewVoterRegisterationResponse, error)
	// AdminCreatePoll defines a method for creating new poll
	AdminCreatePoll(ctx context.Context, in *MsgCreatePollRequest, opts ...grpc.CallOption) (*MsgCreatPollResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) AdminVoterRegisteration(ctx context.Context, in *MsgAdminNewVoterRegistrationRequest, opts ...grpc.CallOption) (*MsgAdminNewVoterRegistrationResponse, error) {
	out := new(MsgAdminNewVoterRegistrationResponse)
	err := c.cc.Invoke(ctx, "/dent.elections.v1beta1.Msg/AdminVoterRegisteration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AdminCreateCandidate(ctx context.Context, in *MsgCreateCandidateRequest, opts ...grpc.CallOption) (*MsgCreateCandidateResponse, error) {
	out := new(MsgCreateCandidateResponse)
	err := c.cc.Invoke(ctx, "/dent.elections.v1beta1.Msg/AdminCreateCandidate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VoterRegisteration(ctx context.Context, in *MsgNewVoterRegisterationRequest, opts ...grpc.CallOption) (*MsgNewVoterRegisterationResponse, error) {
	out := new(MsgNewVoterRegisterationResponse)
	err := c.cc.Invoke(ctx, "/dent.elections.v1beta1.Msg/VoterRegisteration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AdminCreatePoll(ctx context.Context, in *MsgCreatePollRequest, opts ...grpc.CallOption) (*MsgCreatPollResponse, error) {
	out := new(MsgCreatPollResponse)
	err := c.cc.Invoke(ctx, "/dent.elections.v1beta1.Msg/AdminCreatePoll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// AdminVoterRegisteration defines a method for creating new voter registeration request (only accessible via ADMIN)
	AdminVoterRegisteration(context.Context, *MsgAdminNewVoterRegistrationRequest) (*MsgAdminNewVoterRegistrationResponse, error)
	// AdminCreateCandidate defines a method for creating new candidate for election (only accessible via ADMIN)
	AdminCreateCandidate(context.Context, *MsgCreateCandidateRequest) (*MsgCreateCandidateResponse, error)
	// VoterRegisteration defines a method for creating new registering voter
	VoterRegisteration(context.Context, *MsgNewVoterRegisterationRequest) (*MsgNewVoterRegisterationResponse, error)
	// AdminCreatePoll defines a method for creating new poll
	AdminCreatePoll(context.Context, *MsgCreatePollRequest) (*MsgCreatPollResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) AdminVoterRegisteration(ctx context.Context, req *MsgAdminNewVoterRegistrationRequest) (*MsgAdminNewVoterRegistrationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminVoterRegisteration not implemented")
}
func (*UnimplementedMsgServer) AdminCreateCandidate(ctx context.Context, req *MsgCreateCandidateRequest) (*MsgCreateCandidateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminCreateCandidate not implemented")
}
func (*UnimplementedMsgServer) VoterRegisteration(ctx context.Context, req *MsgNewVoterRegisterationRequest) (*MsgNewVoterRegisterationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoterRegisteration not implemented")
}
func (*UnimplementedMsgServer) AdminCreatePoll(ctx context.Context, req *MsgCreatePollRequest) (*MsgCreatPollResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminCreatePoll not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_AdminVoterRegisteration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAdminNewVoterRegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AdminVoterRegisteration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dent.elections.v1beta1.Msg/AdminVoterRegisteration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AdminVoterRegisteration(ctx, req.(*MsgAdminNewVoterRegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AdminCreateCandidate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCandidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AdminCreateCandidate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dent.elections.v1beta1.Msg/AdminCreateCandidate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AdminCreateCandidate(ctx, req.(*MsgCreateCandidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VoterRegisteration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgNewVoterRegisterationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VoterRegisteration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dent.elections.v1beta1.Msg/VoterRegisteration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VoterRegisteration(ctx, req.(*MsgNewVoterRegisterationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AdminCreatePoll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePollRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AdminCreatePoll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dent.elections.v1beta1.Msg/AdminCreatePoll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AdminCreatePoll(ctx, req.(*MsgCreatePollRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dent.elections.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AdminVoterRegisteration",
			Handler:    _Msg_AdminVoterRegisteration_Handler,
		},
		{
			MethodName: "AdminCreateCandidate",
			Handler:    _Msg_AdminCreateCandidate_Handler,
		},
		{
			MethodName: "VoterRegisteration",
			Handler:    _Msg_VoterRegisteration_Handler,
		},
		{
			MethodName: "AdminCreatePoll",
			Handler:    _Msg_AdminCreatePoll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dent/elections/v1beta1/tx.proto",
}

func (m *MsgAdminNewVoterRegistrationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAdminNewVoterRegistrationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAdminNewVoterRegistrationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Otp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Otp))
		i--
		dAtA[i] = 0x18
	}
	if len(m.VoterWalletAddress) > 0 {
		i -= len(m.VoterWalletAddress)
		copy(dAtA[i:], m.VoterWalletAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VoterWalletAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AdminAddress) > 0 {
		i -= len(m.AdminAddress)
		copy(dAtA[i:], m.AdminAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AdminAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAdminNewVoterRegistrationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAdminNewVoterRegistrationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAdminNewVoterRegistrationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateCandidateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCandidateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCandidateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AdminAddress) > 0 {
		i -= len(m.AdminAddress)
		copy(dAtA[i:], m.AdminAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AdminAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Party) > 0 {
		i -= len(m.Party)
		copy(dAtA[i:], m.Party)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Party)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateCandidateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCandidateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCandidateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgNewVoterRegisterationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewVoterRegisterationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewVoterRegisterationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Otp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Otp))
		i--
		dAtA[i] = 0x10
	}
	if len(m.VoterWalletAddress) > 0 {
		i -= len(m.VoterWalletAddress)
		copy(dAtA[i:], m.VoterWalletAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VoterWalletAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgNewVoterRegisterationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewVoterRegisterationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewVoterRegisterationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePollRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePollRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePollRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AdminAddress) > 0 {
		i -= len(m.AdminAddress)
		copy(dAtA[i:], m.AdminAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AdminAddress)))
		i--
		dAtA[i] = 0x2a
	}
	n1, err1 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.PollDuration, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.PollDuration):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintTx(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x22
	n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.StartAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.StartAt):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintTx(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x1a
	if len(m.CandidateIds) > 0 {
		dAtA4 := make([]byte, len(m.CandidateIds)*10)
		var j3 int
		for _, num := range m.CandidateIds {
			for num >= 1<<7 {
				dAtA4[j3] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j3++
			}
			dAtA4[j3] = uint8(num)
			j3++
		}
		i -= j3
		copy(dAtA[i:], dAtA4[:j3])
		i = encodeVarintTx(dAtA, i, uint64(j3))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PollName) > 0 {
		i -= len(m.PollName)
		copy(dAtA[i:], m.PollName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PollName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatPollResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatPollResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatPollResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgAdminNewVoterRegistrationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AdminAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.VoterWalletAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Otp != 0 {
		n += 1 + sovTx(uint64(m.Otp))
	}
	return n
}

func (m *MsgAdminNewVoterRegistrationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateCandidateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Party)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AdminAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateCandidateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgNewVoterRegisterationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.VoterWalletAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Otp != 0 {
		n += 1 + sovTx(uint64(m.Otp))
	}
	return n
}

func (m *MsgNewVoterRegisterationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePollRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PollName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.CandidateIds) > 0 {
		l = 0
		for _, e := range m.CandidateIds {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.StartAt)
	n += 1 + l + sovTx(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.PollDuration)
	n += 1 + l + sovTx(uint64(l))
	l = len(m.AdminAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatPollResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgAdminNewVoterRegistrationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAdminNewVoterRegistrationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAdminNewVoterRegistrationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoterWalletAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VoterWalletAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Otp", wireType)
			}
			m.Otp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Otp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAdminNewVoterRegistrationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAdminNewVoterRegistrationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAdminNewVoterRegistrationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCandidateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCandidateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCandidateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Party", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Party = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCandidateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCandidateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCandidateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgNewVoterRegisterationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewVoterRegisterationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewVoterRegisterationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoterWalletAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VoterWalletAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Otp", wireType)
			}
			m.Otp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Otp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgNewVoterRegisterationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewVoterRegisterationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewVoterRegisterationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePollRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePollRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePollRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PollName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PollName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CandidateIds = append(m.CandidateIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CandidateIds) == 0 {
					m.CandidateIds = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CandidateIds = append(m.CandidateIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CandidateIds", wireType)
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.StartAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PollDuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.PollDuration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatPollResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatPollResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatPollResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
